openapi: 3.0.0
info:
  title: Jobs API
  contact: {}
  version: '1.0'
servers:
- url: https://nilan-jobs-api-f7d6a6028895.herokuapp.com/api/v1
  variables: {}
paths:
  /auth/login:
    post:
      tags:
      - Auth
      summary: login
      operationId: login
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/loginrequest'
              - example:
                  username: marloncduk@gmail.com
                  password: 123@Aiva.com
            example:
              username: marloncduk@gmail.com
              password: 123@Aiva.com
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /auth/register:
    post:
      tags:
      - Auth
      summary: register
      operationId: register
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/registerrequest'
              - example:
                  name: test
                  username: marloncduk@gmail.com
                  password: 123@Aiva.com
            example:
              name: test
              username: marloncduk@gmail.com
              password: 123@Aiva.com
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /jobs:
    get:
      tags:
      - Jobs
      summary: Get All Jobs
      operationId: GetAllJobs
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    post:
      tags:
      - Jobs
      summary: Create Job
      operationId: CreateJob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateJobRequest'
              - example:
                  company: Microsoft
                  position: Senior Software Engineer
            example:
              company: Microsoft
              position: Senior Software Engineer
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
  /jobs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The job ID
    get:
      tags:
      - Jobs
      summary: Get a Job
      operationId: GetaJob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
  /jobs/{jobid}:
    parameters:
      - in: path
        name: jobid
        schema:
          type: string
        required: true
        description: The job ID
    patch:
      tags:
      - Jobs
      summary: Update Job
      operationId: UpdateJob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateJobRequest'
              - example:
                  company: Metrics Foundation
                  position: Scrum Master
            example:
              company: Metrics Foundation
              position: Scrum Master
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
  /jobs/{jobId}:
    parameters:
      - in: path
        name: jobId
        schema:
          type: string
        required: true
        description: The job ID
    delete:
      tags:
      - Jobs
      summary: Remove Job
      operationId: RemoveJob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
components:
  schemas:
    loginrequest:
      title: loginrequest
      required:
      - username
      - password
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      example:
        username: marloncduk@gmail.com
        password: 123@Aiva.com
    registerrequest:
      title: registerrequest
      required:
      - name
      - username
      - password
      type: object
      properties:
        name:
          type: string
        username:
          type: string
        password:
          type: string
      example:
        name: test
        username: marloncduk@gmail.com
        password: 123@Aiva.com
    CreateJobRequest:
      title: CreateJobRequest
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: Microsoft
        position: Senior Software Engineer
    UpdateJobRequest:
      title: UpdateJobRequest
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: Metrics Foundation
        position: Scrum Master
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
- name: Auth
  description: ''
- name: Jobs
  description: ''